// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eTouristapp.WebAPI.Database;

namespace eTouristapp.WebAPI.Migrations
{
    [DbContext(typeof(eTourist1Context))]
    [Migration("20200627120516_Migration1")]
    partial class Migration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Destinacija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GradId")
                        .HasColumnName("GradID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("GradId");

                    b.ToTable("Destinacija");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Drzava", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KontinentId")
                        .HasColumnName("KontinentID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("KontinentId");

                    b.ToTable("Drzava");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Grad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DrzavaId")
                        .HasColumnName("DrzavaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrojZvjezdica")
                        .HasColumnType("int");

                    b.Property<int?>("GradId")
                        .HasColumnName("GradID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("GradId");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Karta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Ponistena")
                        .HasColumnType("bit");

                    b.Property<int?>("PutnikId")
                        .HasColumnName("PutnikID")
                        .HasColumnType("int");

                    b.Property<int?>("TerminId")
                        .HasColumnName("TerminID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PutnikId");

                    b.HasIndex("TerminId");

                    b.ToTable("Karta");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Kontinent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Kontinent");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("KorisnikoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UlogaId")
                        .HasColumnName("UlogaID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UlogaId");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Ocjena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Komentar")
                        .HasColumnType("text");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("OcjenaUsluge")
                        .HasColumnType("int");

                    b.Property<int?>("PutnikId")
                        .HasColumnName("PutnikID")
                        .HasColumnType("int");

                    b.Property<int?>("TerminId")
                        .HasColumnName("TerminID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PutnikId");

                    b.HasIndex("TerminId");

                    b.ToTable("Ocjena");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Putnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumRegistracije")
                        .HasColumnType("datetime");

                    b.Property<int?>("KorisnikId")
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Putnik");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Termin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AktivanTermin")
                        .HasColumnType("bit");

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<decimal?>("CijenaPopust")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<DateTime>("DatumDolaska")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DatumPolaska")
                        .HasColumnType("datetime");

                    b.Property<int?>("DestinacijaId")
                        .HasColumnName("DestinacijaID")
                        .HasColumnType("int");

                    b.Property<int?>("GradId")
                        .HasColumnName("GradID")
                        .HasColumnType("int");

                    b.Property<int?>("HotelId")
                        .HasColumnName("HotelID")
                        .HasColumnType("int");

                    b.Property<float?>("Popust")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("DestinacijaId");

                    b.HasIndex("GradId");

                    b.HasIndex("HotelId");

                    b.ToTable("Termin");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Uloga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Uloga");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Uposlenik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Aktivan")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DatumZaposlenja")
                        .HasColumnType("datetime");

                    b.Property<int?>("KorisnikId")
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Uposlenik");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Destinacija", b =>
                {
                    b.HasOne("eTouristapp.WebAPI.Database.Grad", "Grad")
                        .WithMany("Destinacija")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_Grad_Destinacija");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Drzava", b =>
                {
                    b.HasOne("eTouristapp.WebAPI.Database.Kontinent", "Kontinent")
                        .WithMany("Drzava")
                        .HasForeignKey("KontinentId")
                        .HasConstraintName("FK_Kontinent_Drzava");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Grad", b =>
                {
                    b.HasOne("eTouristapp.WebAPI.Database.Drzava", "Drzava")
                        .WithMany("Grad")
                        .HasForeignKey("DrzavaId")
                        .HasConstraintName("FK_Grad_Drzava");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Hotel", b =>
                {
                    b.HasOne("eTouristapp.WebAPI.Database.Grad", "Grad")
                        .WithMany("Hotel")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_Grad1");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Karta", b =>
                {
                    b.HasOne("eTouristapp.WebAPI.Database.Putnik", "Putnik")
                        .WithMany("Karta")
                        .HasForeignKey("PutnikId")
                        .HasConstraintName("FK_Karta_Putnik");

                    b.HasOne("eTouristapp.WebAPI.Database.Termin", "Termin")
                        .WithMany("Karta")
                        .HasForeignKey("TerminId")
                        .HasConstraintName("FK_Karta_Termin");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Korisnik", b =>
                {
                    b.HasOne("eTouristapp.WebAPI.Database.Uloga", "Uloga")
                        .WithMany("Korisnik")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK_Korisnik_Uloga");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Ocjena", b =>
                {
                    b.HasOne("eTouristapp.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId");

                    b.HasOne("eTouristapp.WebAPI.Database.Putnik", "Putnik")
                        .WithMany("Ocjena")
                        .HasForeignKey("PutnikId")
                        .HasConstraintName("FK_Ocjena_Putnik");

                    b.HasOne("eTouristapp.WebAPI.Database.Termin", "Termin")
                        .WithMany("Ocjena")
                        .HasForeignKey("TerminId")
                        .HasConstraintName("FK_Ocjena_Termin");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Putnik", b =>
                {
                    b.HasOne("eTouristapp.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("Putnik")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Putnik_korisnik");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Termin", b =>
                {
                    b.HasOne("eTouristapp.WebAPI.Database.Destinacija", "Destinacija")
                        .WithMany("Termin")
                        .HasForeignKey("DestinacijaId")
                        .HasConstraintName("FK_Termin_Destinacija");

                    b.HasOne("eTouristapp.WebAPI.Database.Grad", "Grad")
                        .WithMany("Termin")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_Termin_Grad");

                    b.HasOne("eTouristapp.WebAPI.Database.Hotel", "Hotel")
                        .WithMany("Termin")
                        .HasForeignKey("HotelId")
                        .HasConstraintName("FK_Angazman_Hotel");
                });

            modelBuilder.Entity("eTouristapp.WebAPI.Database.Uposlenik", b =>
                {
                    b.HasOne("eTouristapp.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("Uposlenik")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Uposlenik_korisnik");
                });
#pragma warning restore 612, 618
        }
    }
}
